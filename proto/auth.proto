syntax = "proto3";

package auth;

service AuthService {
    rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {}
    rpc SigninUser(SigninUserRequest) returns (SigninUserResponse) {}
    rpc FindUserList(FindUserListRequest) returns (FindUserListResponse) {}
    rpc VerifyToken(VerifyTokenRequest) returns (VerifyTokenResponse) {}
    rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse) {}
    rpc RefreshToken(RefreshTokenRequest) returns (RefreshTokenResponse) {}
}

enum UserRole {
	USER = 0;
	OPERATOR = 1;
	AUDITOR = 2;
	ADMIN = 3;
}

message User {
    string email = 1;
    UserRole role = 2;
    string createdAt = 3;
    string updatedAt = 4;
}

message TokenPayload {
    string sub = 1;
    string email = 2;
    UserRole role = 3;
    int32 tokenVersion = 4;
    string type = 5;
}

message CreateUserRequest {
    string email = 1;
    string password = 2;
    UserRole role = 3;
}

message CreateUserResponse {
    string email = 1;
    UserRole role = 2;
}

message SigninUserRequest {
    string email = 1;
    string password = 2;
}

message SigninUserResponse {
    string accessToken = 1;
    string refreshToken = 2;
}

message FindUserListRequest {
}

message FindUserListResponse {
    repeated User users = 1;
}

message VerifyTokenRequest {
    string jwtToken = 1;
    bool isRefresh = 2;
}

message VerifyTokenResponse {
    bool verify = 1;
    TokenPayload payload = 2;
}

message UpdateUserRequest {
    string email = 1;
    UserRole role = 2;
}

message UpdateUserResponse {
    string email = 1;
    UserRole role = 2;
}

message RefreshTokenRequest {
    string userId = 1;
}

message RefreshTokenResponse {
    string accessToken = 1;
    string refreshToken = 2;
}