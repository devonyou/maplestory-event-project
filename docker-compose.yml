services:
    gateway:
        build:
            context: .
            dockerfile: ./apps/gateway/Dockerfile
            target: development
        command: npm run start:dev gateway
        ports:
            - '3000:3000'
        volumes:
            - .:/usr/src/app
            - /usr/src/app/node_modules
        env_file:
            - ./apps/gateway/.env
        depends_on:
            - auth

    auth:
        build:
            context: .
            dockerfile: ./apps/auth/Dockerfile
            target: development
        command: npm run start:dev auth
        ports:
            - '3001:3000'
        volumes:
            - .:/usr/src/app
            - /usr/src/app/node_modules
        env_file:
            - ./apps/auth/.env
        depends_on:
            mongo_auth:
                condition: service_healthy
            redis:
                condition: service_healthy

    mongo_auth:
        image: mongo:8
        environment:
            MONGO_INITDB_ROOT_USERNAME: mongo
            MONGO_INITDB_ROOT_PASSWORD: pass1234
        ports:
            - '5001:27017'
        volumes:
            - ./mongo:/data/db
        command: mongod --quiet --logpath /dev/null
        healthcheck:
            test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/auth --quiet
            interval: 5s
            timeout: 5s
            retries: 10
            start_period: 5s

    redis:
        image: redis:7-alpine
        ports:
            - '6001:6379'
        volumes:
            - ./redis/data:/data
            - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
        restart: always
        command: redis-server /usr/local/etc/redis/redis.conf --appendonly yes
        healthcheck:
            test: ['CMD', 'redis-cli', 'ping']
            interval: 5s
            timeout: 3s
            retries: 5
