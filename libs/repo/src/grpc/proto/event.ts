// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.0
//   protoc               v5.29.3
// source: proto/event.proto

/* eslint-disable */
import { Metadata } from "@grpc/grpc-js";
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export const protobufPackage = "event";

export interface CreateEventRequest {
  name: string;
  description: string;
}

export interface CreateEventResponse {
  id: string;
  name: string;
  description: string;
}

export const EVENT_PACKAGE_NAME = "event";

export interface EventServiceClient {
  createEvent(request: CreateEventRequest, metadata?: Metadata): Observable<CreateEventResponse>;
}

export interface EventServiceController {
  createEvent(
    request: CreateEventRequest,
    metadata?: Metadata,
  ): Promise<CreateEventResponse> | Observable<CreateEventResponse> | CreateEventResponse;
}

export function EventServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["createEvent"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("EventService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("EventService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const EVENT_SERVICE_NAME = "EventService";
