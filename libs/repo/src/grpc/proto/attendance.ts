// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.0
//   protoc               v5.29.3
// source: proto/attendance.proto

/* eslint-disable */
import { Metadata } from "@grpc/grpc-js";
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export const protobufPackage = "attendance";

export interface CheckAttendanceRequest {
  userId: string;
  attendanceDate: string;
}

export interface CheckAttendanceResponse {
  isChecked: boolean;
}

export interface FindAttendanceRequest {
  userId: string;
  startDate: string;
  endDate: string;
}

export interface FindAttendanceResponse {
  attendanceDays: number;
}

export const ATTENDANCE_PACKAGE_NAME = "attendance";

export interface AttendanceServiceClient {
  checkAttendance(request: CheckAttendanceRequest, metadata?: Metadata): Observable<CheckAttendanceResponse>;

  findAttendance(request: FindAttendanceRequest, metadata?: Metadata): Observable<FindAttendanceResponse>;
}

export interface AttendanceServiceController {
  checkAttendance(
    request: CheckAttendanceRequest,
    metadata?: Metadata,
  ): Promise<CheckAttendanceResponse> | Observable<CheckAttendanceResponse> | CheckAttendanceResponse;

  findAttendance(
    request: FindAttendanceRequest,
    metadata?: Metadata,
  ): Promise<FindAttendanceResponse> | Observable<FindAttendanceResponse> | FindAttendanceResponse;
}

export function AttendanceServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["checkAttendance", "findAttendance"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("AttendanceService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("AttendanceService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const ATTENDANCE_SERVICE_NAME = "AttendanceService";
