// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.0
//   protoc               v5.29.3
// source: proto/auth.proto

/* eslint-disable */
import { Metadata } from "@grpc/grpc-js";
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export const protobufPackage = "auth";

export enum UserRole {
  USER = 0,
  OPERATOR = 1,
  AUDITOR = 2,
  ADMIN = 3,
  UNRECOGNIZED = -1,
}

export interface CreateUserRequest {
  email: string;
  password: string;
  role: UserRole;
}

export interface CreateUserResponse {
  email: string;
}

export interface SigninUserRequest {
  email: string;
  password: string;
}

export interface SigninUserResponse {
  accessToken: string;
  refreshToken: string;
}

export const AUTH_PACKAGE_NAME = "auth";

export interface AuthServiceClient {
  createUser(request: CreateUserRequest, metadata?: Metadata): Observable<CreateUserResponse>;

  signinUser(request: SigninUserRequest, metadata?: Metadata): Observable<SigninUserResponse>;
}

export interface AuthServiceController {
  createUser(
    request: CreateUserRequest,
    metadata?: Metadata,
  ): Promise<CreateUserResponse> | Observable<CreateUserResponse> | CreateUserResponse;

  signinUser(
    request: SigninUserRequest,
    metadata?: Metadata,
  ): Promise<SigninUserResponse> | Observable<SigninUserResponse> | SigninUserResponse;
}

export function AuthServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["createUser", "signinUser"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("AuthService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("AuthService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const AUTH_SERVICE_NAME = "AuthService";
